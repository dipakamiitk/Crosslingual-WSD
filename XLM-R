{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"XLM-R","provenance":[],"authorship_tag":"ABX9TyP60e/RabTCqUOfD0Ch6JCw"},"kernelspec":{"display_name":"Python 3","name":"python3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"846ff4add2ee41dcb9703dde22ad1153":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_0cea966ee34f40ff978fef983a272a3b","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_71f8038e8508404390be9fde63172a04","IPY_MODEL_99df5cff4fea4e79a3fc0be666ebbba8"]}},"0cea966ee34f40ff978fef983a272a3b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"71f8038e8508404390be9fde63172a04":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_ecb8cb610c2b4b45b14412e9c8826ef0","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":5069051,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":5069051,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d2013e1b1ef64b80aa9c64fea7294362"}},"99df5cff4fea4e79a3fc0be666ebbba8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_59d07b84fd814310ab60410c649c0477","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 5.07M/5.07M [00:03&lt;00:00, 1.36MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_422c34af737444faa1e521b9d5ebf93f"}},"ecb8cb610c2b4b45b14412e9c8826ef0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"d2013e1b1ef64b80aa9c64fea7294362":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"59d07b84fd814310ab60410c649c0477":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"422c34af737444faa1e521b9d5ebf93f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5feb2e11000d424292379a347ae59dea":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_508578ac61db401da3bb0783ca0d82b9","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_2c6a393b16af455ca2d8b84399dff924","IPY_MODEL_dba6ddb6987145eca0fa1ab2e6e6da21"]}},"508578ac61db401da3bb0783ca0d82b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2c6a393b16af455ca2d8b84399dff924":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_dff5838bf1a3469ebbbf34716c8894d1","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":513,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":513,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b01f7421bb3042408cc277dde410b584"}},"dba6ddb6987145eca0fa1ab2e6e6da21":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_8eef14fabce34864a9d95e8c80865897","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 513/513 [00:32&lt;00:00, 15.6B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b909d22fb76242a6923987d961b3dfbe"}},"dff5838bf1a3469ebbbf34716c8894d1":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b01f7421bb3042408cc277dde410b584":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"8eef14fabce34864a9d95e8c80865897":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"b909d22fb76242a6923987d961b3dfbe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"eeedc8a5469a45d58f52462776a56cb4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_3c6ec6f884514f6bb7abe50deb50b36f","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_70cee89c5ed94f43991309a31619bd0a","IPY_MODEL_2d62bbd6eb0040f4a98f6e018b223663"]}},"3c6ec6f884514f6bb7abe50deb50b36f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"70cee89c5ed94f43991309a31619bd0a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_a7ff2e0b4aea4c0caac6eea7d8ceb259","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":2244861551,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":2244861551,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ab8b3bed78664fac9000bd4e3dcfc212"}},"2d62bbd6eb0040f4a98f6e018b223663":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_a3ef95b0be304e1692e9a5accf88bf44","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 2.24G/2.24G [00:32&lt;00:00, 68.8MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_c9fb4ce919e246d7b7fc040c0d0494db"}},"a7ff2e0b4aea4c0caac6eea7d8ceb259":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ab8b3bed78664fac9000bd4e3dcfc212":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"a3ef95b0be304e1692e9a5accf88bf44":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"c9fb4ce919e246d7b7fc040c0d0494db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"id":"tsXmhyv_hScM"},"source":["import os\n","import pandas\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"twLJBPHXhV7B","executionInfo":{"status":"ok","timestamp":1603366559860,"user_tz":-330,"elapsed":24192,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"3cd897b7-27dc-418f-fbbe-405adfce6c8b","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/drive/', force_remount=True)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KexVeQPfhXg6"},"source":["wic_path  = \"/content/drive/My Drive/datasets/Split_WiC_dataset\"\n","patht = \"/content/drive/My Drive/datasets/WiC_dataset\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PW4tab16hZoK","executionInfo":{"status":"ok","timestamp":1603366563511,"user_tz":-330,"elapsed":2275,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"ec61d7fe-83f9-4dc8-82ff-11d993c66b0a","colab":{"base_uri":"https://localhost:8080/","height":195}},"source":["wic_train_path_d = os.path.join(wic_path, \"train/train.data.txt\")\n","wic_train_path_g = os.path.join(wic_path, \"train/train.gold.txt\")\n","\n","train_data_df = pandas.read_csv(wic_train_path_d, sep = \"\\t\", names = ['word', 'pos', 'position1', 'sent1', 'sent2'])\n","train_gold_df = pandas.read_csv(wic_train_path_g, sep = \"\\t\", names = ['label'])\n","\n","train_data_df[['position1', 'position2']] = train_data_df['position1'].str.split(\"-\", expand = True)\n","train_data_df = train_data_df[['word', 'pos', 'position1', 'position2', 'sent1', 'sent2']]\n","\n","train_data_df.head()\n","# train_gold_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>pos</th>\n","      <th>position1</th>\n","      <th>position2</th>\n","      <th>sent1</th>\n","      <th>sent2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>carry</td>\n","      <td>V</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>You must carry your camping gear .</td>\n","      <td>Sound carries well over water .</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>go</td>\n","      <td>V</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>Messages must go through diplomatic channels .</td>\n","      <td>Do you think the sofa will go through the door ?</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>break</td>\n","      <td>V</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Break an alibi .</td>\n","      <td>The wholesaler broke the container loads into ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>cup</td>\n","      <td>N</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>He wore a jock strap with a metal cup .</td>\n","      <td>Bees filled the waxen cups with honey .</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>academy</td>\n","      <td>N</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>The Academy of Music .</td>\n","      <td>The French Academy .</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      word  ...                                              sent2\n","0    carry  ...                    Sound carries well over water .\n","1       go  ...   Do you think the sofa will go through the door ?\n","2    break  ...  The wholesaler broke the container loads into ...\n","3      cup  ...            Bees filled the waxen cups with honey .\n","4  academy  ...                               The French Academy .\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"RMXsGdirhrbC","executionInfo":{"status":"ok","timestamp":1603366564731,"user_tz":-330,"elapsed":1281,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"50bff123-f601-4055-839c-717e7cfc24cb","colab":{"base_uri":"https://localhost:8080/","height":195}},"source":["# do same for dev data\n","wic_dev_path_d = os.path.join(wic_path, \"dev/dev.data.txt\")\n","wic_dev_path_g = os.path.join(wic_path, \"dev/dev.gold.txt\")\n","\n","dev_data_df = pandas.read_csv(wic_dev_path_d, sep = \"\\t\", names = ['word', 'pos', 'position1', 'sent1', 'sent2'])\n","dev_gold_df = pandas.read_csv(wic_dev_path_g, sep = \"\\t\", names = ['label'])\n","\n","dev_data_df[['position1', 'position2']] = dev_data_df['position1'].str.split(\"-\", expand = True)\n","dev_data_df = dev_data_df[['word', 'pos', 'position1', 'position2', 'sent1', 'sent2']]\n","\n","dev_data_df.head()\n","# dev_gold_df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>pos</th>\n","      <th>position1</th>\n","      <th>position2</th>\n","      <th>sent1</th>\n","      <th>sent2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>texture</td>\n","      <td>N</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>Fish with a delicate flavor and texture .</td>\n","      <td>Breadfruit has the same texture as bread .</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>coast</td>\n","      <td>N</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>The coast is clear .</td>\n","      <td>The children lined up for a coast down the sno...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>arouse</td>\n","      <td>V</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>To arouse anger .</td>\n","      <td>To arouse jealousy .</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>land</td>\n","      <td>V</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>It can be tricky to land a helicopter .</td>\n","      <td>This may land you in jail .</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>leave</td>\n","      <td>V</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>She did n't leave until midnight .</td>\n","      <td>The ship leaves at midnight .</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      word  ...                                              sent2\n","0  texture  ...         Breadfruit has the same texture as bread .\n","1    coast  ...  The children lined up for a coast down the sno...\n","2   arouse  ...                               To arouse jealousy .\n","3     land  ...                        This may land you in jail .\n","4    leave  ...                      The ship leaves at midnight .\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"be8pM52rhr29","executionInfo":{"status":"ok","timestamp":1603366568252,"user_tz":-330,"elapsed":1450,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"d52f4ae3-5d15-4072-de89-ccb6dc4c6c39","colab":{"base_uri":"https://localhost:8080/","height":430}},"source":["# test data\n","\n","wic_test_path_d = os.path.join(patht, \"dev/dev.data.txt\")\n","wic_test_path_g = os.path.join(patht, \"dev/dev.gold.txt\")\n","\n","test_data_df = pandas.read_csv(wic_test_path_d, sep = \"\\t\", names = ['word', 'pos', 'position1', 'sent1', 'sent2'])\n","test_gold_df = pandas.read_csv(wic_test_path_g, sep = \"\\t\", names = ['label'])\n","print(test_data_df)\n","\n","test_data_df[['position1', 'position2']] = test_data_df['position1'].str.split(\"-\", expand = True)\n","test_data_df = test_data_df[['word', 'pos', 'position1', 'position2', 'sent1', 'sent2']]\n","\n","test_data_df.head()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["            word  ...                                              sent2\n","0          board  ...              He nailed boards across the windows .\n","1      circulate  ...  This letter is being circulated among the facu...\n","2           hook  ...  He hooked a snake accidentally , and was so sc...\n","3     recreation  ...  Drug abuse is often regarded as a form of recr...\n","4    domesticity  ...  A royal family living in unpretentious domesti...\n","..           ...  ...                                                ...\n","633         base  ...  Bases include oxides and hydroxides of metals ...\n","634        power  ...         The mysterious presence of an evil power .\n","635  portmanteau  ...  ` motel ' is a portmanteau word made by combin...\n","636      promise  ...                      I promised somebody my time .\n","637       pierce  ...                      The path pierced the jungle .\n","\n","[638 rows x 5 columns]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word</th>\n","      <th>pos</th>\n","      <th>position1</th>\n","      <th>position2</th>\n","      <th>sent1</th>\n","      <th>sent2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>board</td>\n","      <td>N</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Room and board .</td>\n","      <td>He nailed boards across the windows .</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>circulate</td>\n","      <td>V</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Circulate a rumor .</td>\n","      <td>This letter is being circulated among the facu...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>hook</td>\n","      <td>V</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Hook a fish .</td>\n","      <td>He hooked a snake accidentally , and was so sc...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>recreation</td>\n","      <td>N</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>For recreation he wrote poetry and solved cros...</td>\n","      <td>Drug abuse is often regarded as a form of recr...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>domesticity</td>\n","      <td>N</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>Making a hobby of domesticity .</td>\n","      <td>A royal family living in unpretentious domesti...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          word  ...                                              sent2\n","0        board  ...              He nailed boards across the windows .\n","1    circulate  ...  This letter is being circulated among the facu...\n","2         hook  ...  He hooked a snake accidentally , and was so sc...\n","3   recreation  ...  Drug abuse is often regarded as a form of recr...\n","4  domesticity  ...  A royal family living in unpretentious domesti...\n","\n","[5 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"LaCJlNn7iJd5","executionInfo":{"status":"ok","timestamp":1603347271402,"user_tz":-330,"elapsed":24222,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"61d4d63e-7172-4ec0-ef13-463f28b94ce0","colab":{"base_uri":"https://localhost:8080/","height":384}},"source":["!nvidia-smi"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Thu Oct 22 06:14:32 2020       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 455.23.05    Driver Version: 418.67       CUDA Version: 10.1     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   64C    P8    11W /  70W |      0MiB / 15079MiB |      0%      Default |\n","|                               |                      |                 ERR! |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pHJ-32zuiOiV","executionInfo":{"status":"ok","timestamp":1603366576107,"user_tz":-330,"elapsed":4564,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"764cbfb8-622d-4b2e-8303-8b22e5259c08","colab":{"base_uri":"https://localhost:8080/","height":50}},"source":["import torch\n","\n","# If there's a GPU available...\n","if torch.cuda.is_available():    \n","\n","    # Tell PyTorch to use the GPU.    \n","    device = torch.device(\"cuda\")\n","\n","    print('There are %d GPU(s) available.' % torch.cuda.device_count())\n","\n","    print('We will use the GPU:', torch.cuda.get_device_name(0))\n","\n","# If not...\n","else:\n","    print('No GPU available, using the CPU instead.')\n","    device = torch.device(\"cpu\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["There are 1 GPU(s) available.\n","We will use the GPU: Tesla T4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wm6tzWAmie8A","executionInfo":{"status":"ok","timestamp":1603366581891,"user_tz":-330,"elapsed":8100,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"da9518b0-4762-49ed-ff49-4284e165744a","colab":{"base_uri":"https://localhost:8080/","height":622}},"source":["!pip install transformers"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting transformers\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/2c/4e/4f1ede0fd7a36278844a277f8d53c21f88f37f3754abf76a5d6224f76d4a/transformers-3.4.0-py3-none-any.whl (1.3MB)\n","\r\u001b[K     |▎                               | 10kB 28.0MB/s eta 0:00:01\r\u001b[K     |▌                               | 20kB 18.9MB/s eta 0:00:01\r\u001b[K     |▉                               | 30kB 20.8MB/s eta 0:00:01\r\u001b[K     |█                               | 40kB 16.7MB/s eta 0:00:01\r\u001b[K     |█▎                              | 51kB 11.5MB/s eta 0:00:01\r\u001b[K     |█▋                              | 61kB 10.8MB/s eta 0:00:01\r\u001b[K     |█▉                              | 71kB 10.6MB/s eta 0:00:01\r\u001b[K     |██                              | 81kB 10.7MB/s eta 0:00:01\r\u001b[K     |██▍                             | 92kB 10.5MB/s eta 0:00:01\r\u001b[K     |██▋                             | 102kB 11.0MB/s eta 0:00:01\r\u001b[K     |██▉                             | 112kB 11.0MB/s eta 0:00:01\r\u001b[K     |███▏                            | 122kB 11.0MB/s eta 0:00:01\r\u001b[K     |███▍                            | 133kB 11.0MB/s eta 0:00:01\r\u001b[K     |███▋                            | 143kB 11.0MB/s eta 0:00:01\r\u001b[K     |████                            | 153kB 11.0MB/s eta 0:00:01\r\u001b[K     |████▏                           | 163kB 11.0MB/s eta 0:00:01\r\u001b[K     |████▍                           | 174kB 11.0MB/s eta 0:00:01\r\u001b[K     |████▊                           | 184kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████                           | 194kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████▏                          | 204kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████▌                          | 215kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████▊                          | 225kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████                          | 235kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 245kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 256kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 266kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████                         | 276kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 286kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 296kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████▉                        | 307kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████                        | 317kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 327kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 337kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 348kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 358kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 368kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 378kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████                      | 389kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 399kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 409kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████▊                     | 419kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████                     | 430kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 440kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 450kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 460kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████                    | 471kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████▎                   | 481kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 491kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 501kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 512kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████▎                  | 522kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████▌                  | 532kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 542kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 552kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 563kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████▋                 | 573kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 583kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 593kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████▍                | 604kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████▋                | 614kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████                | 624kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████▏               | 634kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████▍               | 645kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 655kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 665kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▏              | 675kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▌              | 686kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 696kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 706kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▎             | 716kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▌             | 727kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████▊             | 737kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 747kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 757kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 768kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 778kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 788kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 798kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▋           | 808kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 819kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 829kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 839kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▋          | 849kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 860kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 870kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 880kB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▊         | 890kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 901kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 911kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▌        | 921kB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████▊        | 931kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 942kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 952kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 962kB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 972kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 983kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 993kB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▌      | 1.0MB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▉      | 1.0MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 1.0MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▎     | 1.0MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▋     | 1.0MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▉     | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▍    | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▏   | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 1.1MB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▎| 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 1.2MB 11.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.3MB 11.0MB/s \n","\u001b[?25hRequirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.6/dist-packages (from transformers) (2019.12.20)\n","Requirement already satisfied: dataclasses; python_version < \"3.7\" in /usr/local/lib/python3.6/dist-packages (from transformers) (0.7)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from transformers) (20.4)\n","Collecting tokenizers==0.9.2\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7c/a5/78be1a55b2ac8d6a956f0a211d372726e2b1dd2666bb537fea9b03abd62c/tokenizers-0.9.2-cp36-cp36m-manylinux1_x86_64.whl (2.9MB)\n","\u001b[K     |████████████████████████████████| 2.9MB 18.8MB/s \n","\u001b[?25hCollecting sentencepiece!=0.1.92\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d4/a4/d0a884c4300004a78cca907a6ff9a5e9fe4f090f5d95ab341c53d28cbc58/sentencepiece-0.1.91-cp36-cp36m-manylinux1_x86_64.whl (1.1MB)\n","\u001b[K     |████████████████████████████████| 1.1MB 55.5MB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.6/dist-packages (from transformers) (3.0.12)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.6/dist-packages (from transformers) (4.41.1)\n","Requirement already satisfied: protobuf in /usr/local/lib/python3.6/dist-packages (from transformers) (3.12.4)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from transformers) (1.18.5)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7d/34/09d19aff26edcc8eb2a01bed8e98f13a1537005d31e95233fd48216eed10/sacremoses-0.0.43.tar.gz (883kB)\n","\u001b[K     |████████████████████████████████| 890kB 54.0MB/s \n","\u001b[?25hRequirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from packaging->transformers) (2.4.7)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from packaging->transformers) (1.15.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests->transformers) (2020.6.20)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.6/dist-packages (from protobuf->transformers) (50.3.0)\n","Requirement already satisfied: click in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers) (7.1.2)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.6/dist-packages (from sacremoses->transformers) (0.16.0)\n","Building wheels for collected packages: sacremoses\n","  Building wheel for sacremoses (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sacremoses: filename=sacremoses-0.0.43-cp36-none-any.whl size=893257 sha256=c473fb34c977085c9bd03e5c64895fa2b7864d0f42fc606c70c1d8e6fc8fccd2\n","  Stored in directory: /root/.cache/pip/wheels/29/3c/fd/7ce5c3f0666dab31a50123635e6fb5e19ceb42ce38d4e58f45\n","Successfully built sacremoses\n","Installing collected packages: tokenizers, sentencepiece, sacremoses, transformers\n","Successfully installed sacremoses-0.0.43 sentencepiece-0.1.91 tokenizers-0.9.2 transformers-3.4.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"tNo4Qt7kihEp","executionInfo":{"status":"ok","timestamp":1603366584377,"user_tz":-330,"elapsed":8226,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"f4f460f7-3980-4252-d6a3-722cf303d641","colab":{"base_uri":"https://localhost:8080/","height":82,"referenced_widgets":["846ff4add2ee41dcb9703dde22ad1153","0cea966ee34f40ff978fef983a272a3b","71f8038e8508404390be9fde63172a04","99df5cff4fea4e79a3fc0be666ebbba8","ecb8cb610c2b4b45b14412e9c8826ef0","d2013e1b1ef64b80aa9c64fea7294362","59d07b84fd814310ab60410c649c0477","422c34af737444faa1e521b9d5ebf93f"]}},"source":["# from transformers import BertTokenizer\n","from transformers import XLMRobertaTokenizer\n","# Load the BERT tokenizer.\n","print('Loading XLMRoberta tokenizer...')\n","tokenizer = XLMRobertaTokenizer.from_pretrained('xlm-roberta-large') # , do_lower_case=True"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Loading XLMRoberta tokenizer...\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"846ff4add2ee41dcb9703dde22ad1153","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=5069051.0, style=ProgressStyle(descript…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bFm_2GivjdEh","executionInfo":{"status":"ok","timestamp":1603366584379,"user_tz":-330,"elapsed":2649,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"9d7503d8-349d-4e2a-b88e-b7a511143b28","colab":{"base_uri":"https://localhost:8080/","height":67}},"source":["# sentences is a list 0f str\n","train_sentences_1 =  list(train_data_df['sent1'][:])\n","train_sentences_2 = list(train_data_df['sent2'][:])\n","print(len(train_sentences_1))\n","\n","dev_sentences_1 =  list(dev_data_df['sent1'][:])\n","dev_sentences_2 = list(dev_data_df['sent2'][:])\n","print(len(dev_sentences_1))\n","\n","test_sentences_1 =  list(test_data_df['sent1'])\n","test_sentences_2 = list(test_data_df['sent2'])\n","print(len(test_sentences_1))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["4342\n","1086\n","638\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2O_yXmk8j1hU","executionInfo":{"status":"ok","timestamp":1603366588931,"user_tz":-330,"elapsed":2332,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"de575b82-033e-4b6c-8772-dce622cdb7e0","colab":{"base_uri":"https://localhost:8080/","height":84}},"source":["encoded_inputs_train = tokenizer(train_sentences_1, train_sentences_2, padding = True, truncation = True, return_tensors = 'pt')\n","print(len(encoded_inputs_train['input_ids'][0]))\n","print(type(encoded_inputs_train['input_ids']))\n","\n","encoded_inputs_dev = tokenizer(dev_sentences_1, dev_sentences_2, padding = True, truncation = True, return_tensors = 'pt')\n","print(len(encoded_inputs_dev['input_ids'][0]))\n","print(type(encoded_inputs_dev['input_ids']))\n","\n","encoded_inputs_test = tokenizer(test_sentences_1, test_sentences_2, padding = True, truncation = True, return_tensors = 'pt')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["78\n","<class 'torch.Tensor'>\n","61\n","<class 'torch.Tensor'>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zIVstOLQj8A8","executionInfo":{"status":"ok","timestamp":1603366590005,"user_tz":-330,"elapsed":1031,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"70c0feb0-f551-46f0-a9d2-7a848057cc68","colab":{"base_uri":"https://localhost:8080/","height":168}},"source":["# labels = torch.from_numpy(train_gold_df['label'].values)\n","train_gold_df_tmp = train_gold_df.replace({'F' : 0, 'T' : 1})\n","train_labels = torch.from_numpy(train_gold_df_tmp.values)\n","print(train_labels)\n","\n","dev_gold_df_tmp = dev_gold_df.replace({'F' : 0, 'T' : 1})\n","dev_labels = torch.from_numpy(dev_gold_df_tmp.values)\n","print(len(dev_labels))\n","\n","test_gold_df_tmp = test_gold_df.replace({'F' : 0, 'T' : 1})\n","test_labels = torch.from_numpy(test_gold_df_tmp.values)\n","print(len(test_labels))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tensor([[0],\n","        [0],\n","        [0],\n","        ...,\n","        [0],\n","        [1],\n","        [1]])\n","1086\n","638\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4rIS24vNKpwX","executionInfo":{"status":"ok","timestamp":1603366591220,"user_tz":-330,"elapsed":799,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"52128d78-bb11-402d-b209-9725356d33b5","colab":{"base_uri":"https://localhost:8080/","height":168}},"source":["for key in encoded_inputs_train:\n","  print(key)\n","\n","print(encoded_inputs_train['input_ids'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["input_ids\n","attention_mask\n","tensor([[     0,   2583,   8110,  ...,      1,      1,      1],\n","        [     0,  48205,  52467,  ...,      1,      1,      1],\n","        [     0, 131904,    142,  ...,      1,      1,      1],\n","        ...,\n","        [     0,   4939,    242,  ...,      1,      1,      1],\n","        [     0,  13527,     10,  ...,      1,      1,      1],\n","        [     0,     62,  85583,  ...,      1,      1,      1]])\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Ko8VCdhjkAlk"},"source":["from torch.utils.data import TensorDataset, random_split\n","\n","# Combine the training inputs into a TensorDataset.\n","train_dataset = TensorDataset(encoded_inputs_train['input_ids'],\n","                              encoded_inputs_train['attention_mask'], train_labels)\n","\n","dev_dataset = TensorDataset(encoded_inputs_dev['input_ids'],\n","                              encoded_inputs_dev['attention_mask'], dev_labels)\n","\n","test_dataset = TensorDataset(encoded_inputs_test['input_ids'],\n","                              encoded_inputs_test['attention_mask'], test_labels)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hLp-QcOukET4"},"source":["from torch.utils.data import DataLoader, RandomSampler, SequentialSampler\n","\n","# The DataLoader needs to know our batch size for training, so we specify it \n","# here. For fine-tuning BERT on a specific task, the authors recommend a batch \n","# size of 16 or 32.\n","batch_size = 16\n","\n","# Create the DataLoaders for our training and validation sets.\n","# We'll take training samples in random order. \n","train_dataloader = DataLoader(\n","            train_dataset,  # The training samples.\n","            sampler = RandomSampler(train_dataset), # Select batches randomly\n","            batch_size = batch_size # Trains with this batch size.\n","        )\n","\n","# For validation the order doesn't matter, so we'll just read them sequentially.\n","dev_dataloader = DataLoader(\n","            dev_dataset, # The validation samples.\n","            sampler = SequentialSampler(dev_dataset), # Pull out batches sequentially.\n","            batch_size = batch_size # Evaluate with this batch size.\n","        )\n","\n","test_dataloader = DataLoader(\n","            test_dataset, # The validation samples.\n","            sampler = SequentialSampler(test_dataset), # Pull out batches sequentially.\n","            batch_size = batch_size # Evaluate with this batch size.\n","        )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R9Wp9UZtkIGS"},"source":["from transformers import XLMRobertaForSequenceClassification, AdamW, XLMRobertaConfig\n","import torch.nn as nn\n","\n","class XLMi(nn.Module):\n","\n","    def __init__(self):\n","        super(XLMi, self).__init__()\n","\n","        options_name = \"xlm-roberta-large\"\n","        self.encoder = XLMRobertaForSequenceClassification.from_pretrained(options_name)\n","\n","    def forward(self, input_ids, attention_mask, labels):\n","        loss, logits = self.encoder(input_ids = input_ids, attention_mask = attention_mask, labels=labels)[:2]\n","\n","        return loss, logits"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OKTwvKYskpWR","executionInfo":{"status":"ok","timestamp":1603366692280,"user_tz":-330,"elapsed":63947,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"6e4b80c5-2927-4349-bcb4-4cab3bf439f1","colab":{"base_uri":"https://localhost:8080/","height":806,"referenced_widgets":["5feb2e11000d424292379a347ae59dea","508578ac61db401da3bb0783ca0d82b9","2c6a393b16af455ca2d8b84399dff924","dba6ddb6987145eca0fa1ab2e6e6da21","dff5838bf1a3469ebbbf34716c8894d1","b01f7421bb3042408cc277dde410b584","8eef14fabce34864a9d95e8c80865897","b909d22fb76242a6923987d961b3dfbe","eeedc8a5469a45d58f52462776a56cb4","3c6ec6f884514f6bb7abe50deb50b36f","70cee89c5ed94f43991309a31619bd0a","2d62bbd6eb0040f4a98f6e018b223663","a7ff2e0b4aea4c0caac6eea7d8ceb259","ab8b3bed78664fac9000bd4e3dcfc212","a3ef95b0be304e1692e9a5accf88bf44","c9fb4ce919e246d7b7fc040c0d0494db"]}},"source":["model = XLMi().to(device)\n","# Get all of the model's parameters as a list of tuples.\n","params = list(model.named_parameters())\n","\n","print('The XLMI model has {:} different named parameters.\\n'.format(len(params)))\n","\n","print('==== Embedding Layer ====\\n')\n","\n","for p in params[0:5]:\n","    print(\"{:<55} {:>12}\".format(p[0], str(tuple(p[1].size()))))\n","\n","print('\\n==== First Transformer ====\\n')\n","\n","for p in params[5:21]:\n","    print(\"{:<55} {:>12}\".format(p[0], str(tuple(p[1].size()))))\n","\n","print('\\n==== Output Layer ====\\n')\n","\n","for p in params[-4:]:\n","    print(\"{:<55} {:>12}\".format(p[0], str(tuple(p[1].size()))))"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5feb2e11000d424292379a347ae59dea","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=513.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"eeedc8a5469a45d58f52462776a56cb4","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=2244861551.0, style=ProgressStyle(descr…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at xlm-roberta-large were not used when initializing XLMRobertaForSequenceClassification: ['lm_head.bias', 'lm_head.dense.weight', 'lm_head.dense.bias', 'lm_head.layer_norm.weight', 'lm_head.layer_norm.bias', 'lm_head.decoder.weight', 'roberta.pooler.dense.weight', 'roberta.pooler.dense.bias']\n","- This IS expected if you are initializing XLMRobertaForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPretraining model).\n","- This IS NOT expected if you are initializing XLMRobertaForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of XLMRobertaForSequenceClassification were not initialized from the model checkpoint at xlm-roberta-large and are newly initialized: ['classifier.dense.weight', 'classifier.dense.bias', 'classifier.out_proj.weight', 'classifier.out_proj.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"},{"output_type":"stream","text":["The XLMI model has 393 different named parameters.\n","\n","==== Embedding Layer ====\n","\n","encoder.roberta.embeddings.word_embeddings.weight       (250002, 1024)\n","encoder.roberta.embeddings.position_embeddings.weight    (514, 1024)\n","encoder.roberta.embeddings.token_type_embeddings.weight    (1, 1024)\n","encoder.roberta.embeddings.LayerNorm.weight                  (1024,)\n","encoder.roberta.embeddings.LayerNorm.bias                    (1024,)\n","\n","==== First Transformer ====\n","\n","encoder.roberta.encoder.layer.0.attention.self.query.weight (1024, 1024)\n","encoder.roberta.encoder.layer.0.attention.self.query.bias      (1024,)\n","encoder.roberta.encoder.layer.0.attention.self.key.weight (1024, 1024)\n","encoder.roberta.encoder.layer.0.attention.self.key.bias      (1024,)\n","encoder.roberta.encoder.layer.0.attention.self.value.weight (1024, 1024)\n","encoder.roberta.encoder.layer.0.attention.self.value.bias      (1024,)\n","encoder.roberta.encoder.layer.0.attention.output.dense.weight (1024, 1024)\n","encoder.roberta.encoder.layer.0.attention.output.dense.bias      (1024,)\n","encoder.roberta.encoder.layer.0.attention.output.LayerNorm.weight      (1024,)\n","encoder.roberta.encoder.layer.0.attention.output.LayerNorm.bias      (1024,)\n","encoder.roberta.encoder.layer.0.intermediate.dense.weight (4096, 1024)\n","encoder.roberta.encoder.layer.0.intermediate.dense.bias      (4096,)\n","encoder.roberta.encoder.layer.0.output.dense.weight     (1024, 4096)\n","encoder.roberta.encoder.layer.0.output.dense.bias            (1024,)\n","encoder.roberta.encoder.layer.0.output.LayerNorm.weight      (1024,)\n","encoder.roberta.encoder.layer.0.output.LayerNorm.bias        (1024,)\n","\n","==== Output Layer ====\n","\n","encoder.classifier.dense.weight                         (1024, 1024)\n","encoder.classifier.dense.bias                                (1024,)\n","encoder.classifier.out_proj.weight                         (2, 1024)\n","encoder.classifier.out_proj.bias                                (2,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NlCHblICkwK2"},"source":["optimizer = AdamW(model.parameters(),\n","                  lr = 1e-5, # args.learning_rate - default is 5e-5, our notebook had 1e-5\n","                  eps = 1e-8 # args.adam_epsilon  - default is 1e-8.\n","                  )\n","\n","# scheduler??"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JH-XN3dPk2Bd"},"source":["def loss_fn(output, targets):\n","  return nn.BCEWithLogitsLoss()(output, targets)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vuiqn7rlk4sS"},"source":["import numpy as np\n","\n","# Function to calculate the accuracy of our predictions vs labels\n","def flat_accuracy(preds, labels):\n","    pred_flat = np.argmax(preds, axis=1).flatten()\n","    labels_flat = labels.flatten()\n","    print(preds)\n","    print(pred_flat)\n","    print(labels_flat)\n","    return np.sum(pred_flat == labels_flat) / len(labels_flat)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"japBmgqOk62D"},"source":["import time\n","import datetime\n","\n","def format_time(elapsed):\n","    '''\n","    Takes a time in seconds and returns a string hh:mm:ss\n","    '''\n","    # Round to the nearest second.\n","    elapsed_rounded = int(round((elapsed)))\n","    \n","    # Format as hh:mm:ss\n","    return str(datetime.timedelta(seconds=elapsed_rounded))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z5x3eUGMk9Gl","executionInfo":{"status":"ok","timestamp":1603369331320,"user_tz":-330,"elapsed":2661886,"user":{"displayName":"NLP Bros","photoUrl":"","userId":"04584571589891323382"}},"outputId":"2b320037-55ea-48bd-cd81-d67ac493ece3","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["import random\n","import numpy as np\n","\n","# This training code is based on the `run_glue.py` script here:\n","# https://github.com/huggingface/transformers/blob/5bfcd0485ece086ebcbed2d008813037968a9e58/examples/run_glue.py#L128\n","\n","\n","# We'll store a number of quantities such as training and validation loss, \n","# validation accuracy, and timings.\n","training_stats = []\n","\n","# Measure the total training time for the whole run.\n","total_t0 = time.time()\n","epochs = 10\n","# For each epoch...\n","for epoch_i in range(0, epochs):\n","    \n","    # ========================================\n","    #               Training\n","    # ========================================\n","    \n","    # Perform one full pass over the training set.\n","\n","    print(\"\")\n","    print('======== Epoch {:} / {:} ========'.format(epoch_i + 1, epochs))\n","    print('Training...')\n","\n","    # Measure how long the training epoch takes.\n","    t0 = time.time()\n","\n","    # Reset the total loss for this epoch.\n","    total_train_loss = 0\n","\n","    # Put the model into training mode. Don't be mislead--the call to \n","    # `train` just changes the *mode*, it doesn't *perform* the training.\n","    # `dropout` and `batchnorm` layers behave differently during training\n","    # vs. test (source: https://stackoverflow.com/questions/51433378/what-does-model-train-do-in-pytorch)\n","    model.train()\n","\n","    # For each batch of training data...\n","    for step, batch in enumerate(train_dataloader):\n","\n","        # Progress update every 40 batches.\n","        if step % 100 == 0 and not step == 0:\n","            # Calculate elapsed time in minutes.\n","            elapsed = format_time(time.time() - t0)\n","            \n","            # Report progress.\n","            print('  Batch {:>5,}  of  {:>5,}.    Elapsed: {:}.'.format(step, len(train_dataloader), elapsed))\n","\n","        # Unpack this training batch from our dataloader. \n","        #\n","        # As we unpack the batch, we'll also copy each tensor to the GPU using the \n","        # `to` method.\n","\n","        b_input_ids = batch[0].to(device)\n","        # b_token_type_ids = batch[1].to(device)\n","        b_attention_mask = batch[1].to(device)\n","        b_labels = batch[2].to(device)\n","\n","        # Always clear any previously calculated gradients before performing a\n","        # backward pass. PyTorch doesn't do this automatically because \n","        # accumulating the gradients is \"convenient while training RNNs\". \n","        # (source: https://stackoverflow.com/questions/48001598/why-do-we-need-to-call-zero-grad-in-pytorch)\n","        model.zero_grad()        \n","\n","        # Perform a forward pass (evaluate the model on this training batch).\n","        # The documentation for this `model` function is here: \n","        # https://huggingface.co/transformers/v2.2.0/model_doc/bert.html#transformers.BertForSequenceClassification\n","        # It returns different numbers of parameters depending on what arguments\n","        # arge given and what flags are set. For our useage here, it returns\n","        # the loss (because we provided labels) and the \"logits\"--the model\n","        # outputs prior to activation.\n","        loss, logits = model(b_input_ids, b_attention_mask, b_labels)\n","        # print(logits)\n","        # Accumulate the training loss over all of the batches so that we can\n","        # calculate the average loss at the end. `loss` is a Tensor containing a\n","        # single value; the `.item()` function just returns the Python value \n","        # from the tensor.\n","        \n","        # print(loss)\n","        total_train_loss += loss.item()\n","\n","        # Perform a backward pass to calculate the gradients.\n","        loss.backward()\n","\n","        # Clip the norm of the gradients to 1.0.\n","        # This is to help prevent the \"exploding gradients\" problem.\n","        torch.nn.utils.clip_grad_norm_(model.parameters(), 1.0)\n","\n","        # Update parameters and take a step using the computed gradient.\n","        # The optimizer dictates the \"update rule\"--how the parameters are\n","        # modified based on their gradients, the learning rate, etc.\n","        optimizer.step()\n","\n","        # # Update the learning rate.\n","        # scheduler.step()\n","\n","    # Calculate the average loss over all of the batches.\n","    avg_train_loss = total_train_loss / len(train_dataloader)            \n","    \n","    # Measure how long this epoch took.\n","    training_time = format_time(time.time() - t0)\n","\n","    print(\"\")\n","    print(\"  Average training loss: {0:.2f}\".format(avg_train_loss))\n","    print(\"  Training epcoh took: {:}\".format(training_time))\n","        \n","    # ========================================\n","    #               Validation\n","    # ========================================\n","    # After the completion of each training epoch, measure our performance on\n","    # our validation set.\n","\n","    print(\"\")\n","    print(\"Running Validation...\")\n","\n","    t0 = time.time()\n","\n","    # Put the model in evaluation mode--the dropout layers behave differently\n","    # during evaluation.\n","    model.eval()\n","\n","    # Tracking variables \n","    total_eval_accuracy = 0\n","    total_eval_loss = 0\n","    nb_eval_steps = 0\n","\n","    t_labels = []\n","    t_preds = []\n","\n","    # Evaluate data for one epoch\n","    for batch in dev_dataloader:\n","        \n","        # Unpack this training batch from our dataloader. \n","        #\n","        # As we unpack the batch, we'll also copy each tensor to the GPU using \n","        # the `to` method.\n","\n","        b_input_ids = batch[0].to(device)\n","        # b_token_type_ids = batch[1].to(device)\n","        b_attention_mask = batch[1].to(device)\n","        b_labels = batch[2].to(device)\n","        \n","        # Tell pytorch not to bother with constructing the compute graph during\n","        # the forward pass, since this is only needed for backprop (training).\n","        with torch.no_grad():        \n","\n","            # Forward pass, calculate logit predictions.\n","            # token_type_ids is the same as the \"segment ids\", which \n","            # differentiates sentence 1 and 2 in 2-sentence tasks.\n","            # The documentation for this `model` function is here: \n","            # https://huggingface.co/transformers/v2.2.0/model_doc/bert.html#transformers.BertForSequenceClassification\n","            # Get the \"logits\" output by the model. The \"logits\" are the output\n","            # values prior to applying an activation function like the softmax.\n","            loss, logits = model(b_input_ids, b_attention_mask, b_labels)\n","            \n","            \n","        # Accumulate the validation loss.\n","        total_eval_loss += loss.item()\n","\n","        # Move logits and labels to CPU\n","        logits = logits.cpu().detach().numpy()\n","        label_ids = b_labels.cpu().numpy()\n","\n","        t_labels.append(label_ids)\n","        t_preds.append(logits)\n","        \n","\n","    all_dev_labels = np.concatenate(t_labels, axis=0)\n","    all_dev_logits = np.concatenate(t_preds, axis=0)\n","    # Report the final accuracy for this validation run.\n","    avg_val_accuracy = flat_accuracy(all_dev_logits, all_dev_labels)\n","    print(\"  Validation Accuracy: {0:.4f}\".format(avg_val_accuracy))\n","\n","    # Calculate the average loss over all of the batches.\n","    avg_val_loss = total_eval_loss / len(dev_dataloader)\n","    \n","    # Measure how long the validation run took.\n","    validation_time = format_time(time.time() - t0)\n","    \n","    print(\"  Validation Loss: {0:.3f}\".format(avg_val_loss))\n","    print(\"  Validation took: {:}\".format(validation_time))\n","\n","    # Record all statistics from this epoch.\n","    training_stats.append(\n","        {\n","            'epoch': epoch_i + 1,\n","            'Training Loss': avg_train_loss,\n","            'Valid. Loss': avg_val_loss,\n","            'Valid. Accur.': avg_val_accuracy,\n","            'Training Time': training_time,\n","            'Validation Time': validation_time\n","        }\n","    )\n","\n","    # Do same on test data\n","    # Tracking variables \n","    total_eval_accuracy = 0\n","    total_eval_loss = 0\n","    nb_eval_steps = 0\n","\n","    t_labels = []\n","    t_preds = []\n","\n","    # Evaluate data for one epoch\n","    for batch in test_dataloader:\n","        \n","        # Unpack this training batch from our dataloader. \n","        #\n","        # As we unpack the batch, we'll also copy each tensor to the GPU using \n","        # the `to` method.\n","\n","        b_input_ids = batch[0].to(device)\n","        # b_token_type_ids = batch[1].to(device)\n","        b_attention_mask = batch[1].to(device)\n","        b_labels = batch[2].to(device)\n","        \n","        # Tell pytorch not to bother with constructing the compute graph during\n","        # the forward pass, since this is only needed for backprop (training).\n","        with torch.no_grad():\n","            loss, logits = model(b_input_ids, b_attention_mask, b_labels)\n","            \n","        # Accumulate the validation loss.\n","        total_eval_loss += loss.item()\n","\n","        # Move logits and labels to CPU\n","        logits = logits.cpu().detach().numpy()\n","        label_ids = b_labels.cpu().numpy()\n","\n","        t_labels.append(label_ids)\n","        t_preds.append(logits)\n","        \n","\n","    all_dev_labels = np.concatenate(t_labels, axis=0)\n","    all_dev_logits = np.concatenate(t_preds, axis=0)\n","    # Report the final accuracy for this validation run.\n","    avg_val_accuracy = flat_accuracy(all_dev_logits, all_dev_labels)\n","    print(\"  Test  Accuracy: {0:.4f}\".format(avg_val_accuracy))\n","\n","    # Calculate the average loss over all of the batches.\n","    avg_val_loss = total_eval_loss / len(train_dataloader)\n","    \n","    # Measure how long the validation run took.\n","    validation_time = format_time(time.time() - t0)\n","    \n","    print(\"  Test Avg Loss: {0:.3f}\".format(avg_val_loss))\n","    print(\"  Testing Validation took: {:}\".format(validation_time))\n","\n","\n","print(\"\")\n","print(\"Training complete!\")\n","\n","print(\"Total training took {:} (h:mm:ss)\".format(format_time(time.time()-total_t0)))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\n","======== Epoch 1 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:25.\n","  Batch   200  of    272.    Elapsed: 0:02:54.\n","\n","  Average training loss: 0.69\n","  Training epcoh took: 0:03:58\n","\n","Running Validation...\n","[[-0.78249604  0.16074495]\n"," [-0.24729791 -0.5700336 ]\n"," [-0.93720204  0.29288796]\n"," ...\n"," [-0.58586514 -0.05083408]\n"," [-0.4862697  -0.27028683]\n"," [-1.7069083   1.9668838 ]]\n","[1 0 1 ... 1 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.6446\n","  Validation Loss: 0.663\n","  Validation took: 0:00:14\n","[[-0.13019285 -0.6871022 ]\n"," [-0.17883815 -0.676458  ]\n"," [-0.16549349 -0.6165792 ]\n"," ...\n"," [-1.7657169   1.7437537 ]\n"," [-1.764262    1.8866091 ]\n"," [-0.21420592 -0.5686366 ]]\n","[0 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1\n"," 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 1\n"," 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 0 1 0 1 1 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 0\n"," 0 1 0 1 0 0 1 1 1 0 1 1 0 1 0 1 1 1 0 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 0\n"," 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 0 0 1\n"," 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 1\n"," 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 0 1 1 1 0 1 0 1\n"," 1 0 1 1 1 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 1\n"," 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1\n"," 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1\n"," 1 1 0 0 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 1\n"," 1 0 1 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 0 0\n"," 1 1 0 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 0 1\n"," 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 0 0 1\n"," 1 1 1 1 0 1 1 1 1 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1\n"," 1 1 1 1 1 1 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.5674\n","  Test Avg Loss: 0.120\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 2 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.66\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[ 0.7053079  -1.0922711 ]\n"," [ 0.07384722 -0.78377247]\n"," [-0.7378432   0.12156548]\n"," ...\n"," [ 0.08743715 -0.791045  ]\n"," [-0.44158164 -0.3547154 ]\n"," [-1.2292422   0.680462  ]]\n","[0 0 1 ... 0 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.6427\n","  Validation Loss: 0.667\n","  Validation took: 0:00:14\n","[[ 0.04444531 -0.7707195 ]\n"," [ 0.05153451 -0.76890135]\n"," [ 0.20069925 -0.86117995]\n"," ...\n"," [-1.3120776   0.6529629 ]\n"," [-0.6358691  -0.12881888]\n"," [ 0.05600955 -0.77599144]]\n","[0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 0 1 1\n"," 0 0 1 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 1 0 0 1 0 0 0 1 1 1 1 0 0 0 1 0\n"," 1 0 0 1 1 1 0 0 1 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 0 0 1 0\n"," 1 1 0 1 0 1 0 1 1 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 1 1 1 0 0 0 1 0 1\n"," 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 1 1 0 0 0 1 1 0 1 1 0 0 0 0 0 1 1 0 0 0 1 0\n"," 1 0 0 1 0 0 0 1 0 0 1 1 0 0 0 1 0 0 1 0 1 0 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0\n"," 1 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 0 0 0\n"," 0 1 1 1 1 0 0 1 1 0 1 0 0 0 1 1 0 1 0 1 0 1 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0\n"," 1 0 0 1 0 0 0 0 1 1 0 0 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1\n"," 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0 1\n"," 0 1 0 1 0 0 1 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0\n"," 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 1 1\n"," 0 0 0 0 1 0 1 0 1 0 1 1 0 1 0 0 0 0 1 0 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0\n"," 1 0 0 0 1 0 0 0 0 1 1 1 0 1 1 0 1 0 1 0 1 0 0 0 1 0 1 0 0 1 1 1 0 0 0 0 1\n"," 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 0 1 0 0 0 0 0 0 0\n"," 0 1 0 1 0 1 0 1 1 0 0 1 0 0 1 1 0 0 0 0 0 1 0 1 1 1 0 1 1 0 0 1 0 1 0 0 1\n"," 0 1 1 0 0 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6599\n","  Test Avg Loss: 0.099\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 3 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.64\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-0.1385093  -0.5970603 ]\n"," [-0.13427132 -0.5982236 ]\n"," [-0.9811992   0.23156336]\n"," ...\n"," [-0.18682012 -0.5453732 ]\n"," [-0.16987637 -0.5542806 ]\n"," [-0.94564223  0.26963368]]\n","[0 0 1 ... 0 0 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.6446\n","  Validation Loss: 0.619\n","  Validation took: 0:00:14\n","[[-0.13655302 -0.59845686]\n"," [-0.1632436  -0.4789365 ]\n"," [-0.15006666 -0.5841112 ]\n"," ...\n"," [-1.0995896   0.3986372 ]\n"," [-1.047729    0.4652149 ]\n"," [-0.13974588 -0.5974921 ]]\n","[0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 0 0 1 0 1 1\n"," 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 0\n"," 1 0 0 1 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 0\n"," 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 0 0 0 1\n"," 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 1 1 0 0 0 1 1 1 1 1 0 0 0 0 1 1 1 0 0 0 1 0\n"," 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 1 0 1 1 0 1 0 1 1 0 0 1 0 0 0 1 0 0 1 1 1 0\n"," 1 0 1 1 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 0 0 0 1 0 0 0\n"," 0 1 0 1 1 0 0 1 1 0 1 0 0 0 0 0 1 0 1 1 1 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1\n"," 1 0 0 1 0 0 1 0 1 1 1 0 0 1 0 1 0 1 1 1 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0\n"," 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 0 0 1 1 0 0 0 1\n"," 0 0 1 1 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0\n"," 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0\n"," 0 0 0 0 1 0 1 0 1 0 0 1 0 1 0 1 1 1 1 1 1 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0\n"," 1 0 0 0 1 0 0 0 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 0 1 0 1 1 0 0 0 1 1 0 0 0 1\n"," 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 0 0 0 0 0 1\n"," 0 0 0 1 0 1 0 1 1 0 0 1 0 1 0 1 0 0 0 0 0 1 0 1 0 1 0 1 1 0 0 1 0 0 0 1 1\n"," 0 1 1 1 0 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6740\n","  Test Avg Loss: 0.092\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 4 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.56\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-0.7742355   0.162399  ]\n"," [-0.15089771 -0.49101368]\n"," [-1.1719569   0.40030685]\n"," ...\n"," [-1.1503384   0.4344919 ]\n"," [-0.9510499   0.4899699 ]\n"," [-1.3892344   0.7931648 ]]\n","[1 0 1 ... 1 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7017\n","  Validation Loss: 0.585\n","  Validation took: 0:00:14\n","[[ 0.14785619 -0.75132453]\n"," [-0.74602294 -0.05080119]\n"," [-1.0462356   0.24911273]\n"," ...\n"," [-1.3721182   0.6545227 ]\n"," [-1.3240055   0.76090103]\n"," [-0.3971083  -0.14892037]]\n","[0 1 1 1 1 1 1 1 1 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1\n"," 1 1 1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n"," 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1\n"," 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0\n"," 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0\n"," 1 0 0 1 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1\n"," 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1\n"," 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 1\n"," 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1\n"," 1 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n"," 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 1 1 1\n"," 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1\n"," 1 1 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1\n"," 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1\n"," 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 0 1 1 1]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6034\n","  Test Avg Loss: 0.106\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 5 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.45\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-1.9154586   1.2727019 ]\n"," [ 0.45109215 -0.7921785 ]\n"," [-2.0070136   1.5167631 ]\n"," ...\n"," [-1.6327736   0.85609823]\n"," [-1.0865098   0.5224582 ]\n"," [-2.1400561   1.9701203 ]]\n","[1 0 1 ... 1 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7578\n","  Validation Loss: 0.581\n","  Validation took: 0:00:14\n","[[ 1.7984895  -1.1013522 ]\n"," [-0.03706488 -0.51741904]\n"," [-1.9176202   1.0591187 ]\n"," ...\n"," [-2.2170308   1.6537517 ]\n"," [-1.8658823   1.4973674 ]\n"," [ 0.6332347  -0.936148  ]]\n","[0 0 1 1 1 0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1\n"," 1 1 1 1 0 0 0 0 0 1 1 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 0\n"," 1 1 0 1 0 1 0 0 1 0 1 0 1 0 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 0 0 1 1\n"," 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 0 0 1 0 1\n"," 0 1 1 0 1 0 1 0 1 0 1 0 0 1 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 1 1 0 0 1 0\n"," 1 0 0 1 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 0 0 0 1 0 0 1 1 1 0\n"," 1 0 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 0 0 0\n"," 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 1 0 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 0 0 1\n"," 1 1 1 1 1 1 0 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1\n"," 1 1 1 0 0 1 1 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 1 1 1 0 0 0 1 1 0 1 1 1 1\n"," 1 0 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1\n"," 1 1 0 0 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 1 1 0 0 1 0 1 1 0 1 0 1 1 1\n"," 0 0 1 0 0 0 1 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1\n"," 1 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 1 1 0 1 0 1\n"," 1 1 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1\n"," 1 0 1 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1\n"," 0 1 1 1 0 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6975\n","  Test Avg Loss: 0.112\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 6 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.34\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-1.1266593   0.7393464 ]\n"," [ 1.250056   -1.3758086 ]\n"," [-1.6049565   1.2800882 ]\n"," ...\n"," [-1.2377206   0.82792205]\n"," [-1.3429127   1.1920843 ]\n"," [-1.6417084   1.3668824 ]]\n","[1 0 1 ... 1 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7670\n","  Validation Loss: 0.583\n","  Validation took: 0:00:14\n","[[ 1.5526589  -1.2556908 ]\n"," [ 1.1196635  -1.1712023 ]\n"," [-1.4678606   0.96866536]\n"," ...\n"," [-1.6386405   1.2660551 ]\n"," [-1.6621871   1.3587283 ]\n"," [ 1.3174037  -1.3036895 ]]\n","[0 0 1 1 1 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1\n"," 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 0 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 1\n"," 1 0 0 1 1 1 0 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 1 1\n"," 1 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1\n"," 1 1 1 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 0 0 1 0\n"," 1 0 0 1 0 1 0 1 0 1 1 1 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 0 1 1 0\n"," 1 0 1 1 1 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 0 1 0 0 0\n"," 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1\n"," 1 1 0 1 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1\n"," 1 1 1 1 0 1 1 0 1 1 1 0 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 0 1 1 0 1 1 1 1\n"," 1 1 1 1 1 0 0 1 1 1 1 1 0 0 0 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1\n"," 0 1 0 0 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 1 0 1 1 1\n"," 0 0 1 0 1 0 1 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1\n"," 1 1 0 0 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 0 1\n"," 1 1 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 1 0 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0 1\n"," 1 1 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1\n"," 0 1 1 1 1 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6944\n","  Test Avg Loss: 0.110\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 7 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.27\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-1.3109324  1.1680894]\n"," [ 1.9379908 -1.5384727]\n"," [-2.26069    1.7605636]\n"," ...\n"," [-1.9053547  1.6906903]\n"," [-1.3719995  1.2813233]\n"," [-2.315774   2.1674778]]\n","[1 0 1 ... 1 1 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7505\n","  Validation Loss: 0.600\n","  Validation took: 0:00:14\n","[[ 1.6216668  -1.42429   ]\n"," [ 1.0463114  -0.98696053]\n"," [-1.9858625   1.4397547 ]\n"," ...\n"," [-2.1679735   1.7675006 ]\n"," [-2.0169709   1.7974923 ]\n"," [ 0.44669053 -0.43757075]]\n","[0 0 1 1 1 0 0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1\n"," 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 0 1 1 1 1 0 1 0\n"," 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 1 1 0 0 0 1 1 1 1 1 1 0 0 0 0 1\n"," 1 1 1 1 1 0 1 1 1 0 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0\n"," 1 0 0 1 0 1 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 0\n"," 1 0 1 1 1 1 1 1 1 1 0 0 0 0 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0\n"," 1 1 1 1 1 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 0 0 1 1 0 1\n"," 1 1 0 1 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 1 1 0 1 0 0 1\n"," 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1\n"," 1 1 1 1 0 1 1 0 1 1 1 0 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1\n"," 1 1 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1\n"," 1 1 0 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 0 1 1 1 1 1 0 1 0 1 1 1\n"," 0 0 1 0 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1\n"," 1 1 0 0 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1\n"," 1 1 0 1 1 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1\n"," 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 0 1 1\n"," 1 1 1 1 1 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6834\n","  Test Avg Loss: 0.127\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 8 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.24\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-2.6223483  1.8381957]\n"," [ 1.9307528 -1.7063332]\n"," [-3.3547943  2.3707356]\n"," ...\n"," [-2.9660192  1.9970185]\n"," [ 1.135714  -1.2426227]\n"," [-3.4155352  2.5382032]]\n","[1 0 1 ... 1 0 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7735\n","  Validation Loss: 0.748\n","  Validation took: 0:00:14\n","[[ 2.4271367  -2.0238798 ]\n"," [-0.59310746  0.05248975]\n"," [-3.306632    2.2287602 ]\n"," ...\n"," [-3.5182972   2.5662735 ]\n"," [-3.195215    2.3487017 ]\n"," [-0.30225462 -0.04492147]]\n","[0 1 1 1 1 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 1\n"," 1 1 1 1 0 0 1 0 1 1 1 0 1 0 0 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 1 0\n"," 1 1 0 1 1 1 0 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 0 1 0 1 1 1 0 0 1 1\n"," 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 0 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1\n"," 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0 1 1 1 1 0 1 1 0 0 0 0 1 1 1 1 0 0 1 0\n"," 1 0 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 0 0 1 0 1 0\n"," 1 0 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 0 0 0\n"," 1 1 1 1 1 0 0 1 1 0 1 0 0 0 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 0 0 0 0 1 1 0 1\n"," 1 0 0 1 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 0 0 1 1 1 1 0 1 0 0 1\n"," 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1\n"," 0 1 1 0 0 0 1 0 1 1 0 0 0 0 1 1 0 1 0 0 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1\n"," 1 1 1 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 0 1 0 1 0 1 0 0 1 1 1 1 0 0 1 1 1 1 1\n"," 1 0 0 0 1 0 0 0 1 1 0 0 1 1 0 1 1 0 1 1 0 1 0 0 0 0 0 1 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 0 1 0 0 1 1\n"," 1 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 0 0 1 1 0 1 1 0 1\n"," 1 1 0 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 1 1 1 1 1 1 0 0 0 0 0 0\n"," 1 0 1 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 1 0 1 1\n"," 1 1 1 1 0 0 1 1 1]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.7147\n","  Test Avg Loss: 0.151\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 9 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:29.\n","  Batch   200  of    272.    Elapsed: 0:02:58.\n","\n","  Average training loss: 0.21\n","  Training epcoh took: 0:04:02\n","\n","Running Validation...\n","[[-3.9088173  3.3248825]\n"," [ 2.6755443 -2.063352 ]\n"," [-3.9381483  3.5033092]\n"," ...\n"," [-4.089272   3.5068126]\n"," [ 2.6666865 -2.1218588]\n"," [-4.065256   3.5330453]]\n","[1 0 1 ... 1 0 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7680\n","  Validation Loss: 1.258\n","  Validation took: 0:00:14\n","[[ 2.6992178  -2.1062412 ]\n"," [ 0.61193156 -0.56643504]\n"," [-4.1238537   3.345012  ]\n"," ...\n"," [-3.93573     3.4589353 ]\n"," [-3.9203434   3.5444684 ]\n"," [ 1.909944   -1.3895638 ]]\n","[0 0 1 1 1 0 1 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1\n"," 1 1 1 1 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1\n"," 1 0 1 1 1 1 0 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1\n"," 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 0 1 1 0 0 1 1 0 1 1 1 1 1 0 1 0 1\n"," 1 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 0 1 0\n"," 1 0 0 1 0 1 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 1 0\n"," 1 1 1 1 1 1 1 0 1 1 0 0 0 1 0 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0\n"," 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 0 1\n"," 1 1 1 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1\n"," 1 1 0 1 1 1 1 0 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 0 1 1 1 1 1 1\n"," 1 1 1 1 0 1 1 1 1 1 1 0 0 0 1 1 0 1 0 0 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n"," 1 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1\n"," 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 1 1 0 1 1 1 1 1 0 1 0 1 1 1\n"," 1 0 1 0 1 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 0 1 1 1\n"," 1 1 0 0 0 0 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 0 1\n"," 1 1 0 0 0 0 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1 0 0 1 1 0 1\n"," 1 0 1 1 1 1 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 1\n"," 1 1 1 1 1 0 1 1 0]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6740\n","  Test Avg Loss: 0.275\n","  Testing Validation took: 0:00:22\n","\n","======== Epoch 10 / 10 ========\n","Training...\n","  Batch   100  of    272.    Elapsed: 0:01:28.\n","  Batch   200  of    272.    Elapsed: 0:02:57.\n","\n","  Average training loss: 0.17\n","  Training epcoh took: 0:04:01\n","\n","Running Validation...\n","[[-2.9514334  2.3740435]\n"," [ 2.4223583 -1.9930034]\n"," [-3.1062093  2.3052356]\n"," ...\n"," [-3.3578715  2.4663186]\n"," [ 2.519377  -1.9370618]\n"," [-3.390708   2.6851504]]\n","[1 0 1 ... 1 0 1]\n","[1 0 1 ... 1 1 1]\n","  Validation Accuracy: 0.7762\n","  Validation Loss: 1.015\n","  Validation took: 0:00:14\n","[[ 2.5037909 -2.2733612]\n"," [-2.098758   1.3527482]\n"," [-3.318962   2.4677835]\n"," ...\n"," [-3.3317046  2.5871422]\n"," [-3.3118534  2.6949122]\n"," [-3.0534666  2.4222007]]\n","[0 1 1 1 1 0 1 0 1 0 0 1 0 0 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 0 1 1 0 1 0 1 1\n"," 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1\n"," 1 1 0 1 1 1 0 0 1 0 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 0 1 1\n"," 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 0 1\n"," 0 1 1 0 1 1 1 0 1 0 1 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 0 0 1 0\n"," 1 0 0 1 0 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 1 1 1 0\n"," 1 0 1 1 1 1 0 1 1 1 0 0 0 1 1 0 0 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1 0 1 0 1 0\n"," 1 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 1 1 0 1 1 1 1 1 0 0 1 0 0 0 0 1 1 0 1\n"," 1 1 0 1 0 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1\n"," 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1\n"," 1 1 1 1 0 1 1 0 1 1 1 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1\n"," 1 1 1 1 1 0 0 0 1 1 1 1 1 0 0 1 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1\n"," 1 0 0 0 1 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 0\n"," 1 0 1 0 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1\n"," 1 1 0 0 0 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 1 1 1 1 0 1\n"," 1 1 0 0 0 0 1 1 0 1 1 0 1 1 1 0 0 0 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1\n"," 1 0 1 1 1 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1]\n","[0 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 0 0 1 1\n"," 1 1 1 1 1 0 1 1 1 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 0 0 1 1 0 0 1 1 1 1 1 0\n"," 1 1 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0 0 0 0 1 1 1 0 0 0 0 0 1 0 0 0 0 0 0 1 1\n"," 0 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1\n"," 0 0 1 0 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 1 1 1 1 0 0 0 0\n"," 1 0 0 0 0 1 0 1 0 1 1 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 1 1 1 1 0 1 0 0 0 1 0\n"," 1 0 1 1 0 1 1 1 1 0 0 0 0 1 0 0 0 0 1 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 1 0 0\n"," 1 0 1 1 1 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 0 0 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1\n"," 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 0 0 0 1 0 1 1 0 1 0 0 0\n"," 0 1 0 1 0 1 1 1 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 1\n"," 1 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 1 1 0 0\n"," 1 0 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 0 1\n"," 1 0 0 0 0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 0 0 0 0 1 1 0 0 0 0 1 0 0 1 0 1 1 0\n"," 0 0 1 0 0 1 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 0 0 1 1 0\n"," 1 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 1 1 0 0 1 1 1 1 0 0 1\n"," 0 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1\n"," 1 0 0 1 0 1 0 1 1 0 0 1 0 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 0 1 0 0 1 1 1 1\n"," 1 1 0 1 0 0 1 1 0]\n","  Test  Accuracy: 0.6850\n","  Test Avg Loss: 0.212\n","  Testing Validation took: 0:00:22\n","\n","Training complete!\n","Total training took 0:43:58 (h:mm:ss)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Dka6Lko2lFH0"},"source":[""],"execution_count":null,"outputs":[]}]}